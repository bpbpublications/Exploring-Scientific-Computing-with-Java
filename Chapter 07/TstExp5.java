class TstExp5 
{

public static void main(String args[])
 {

try 

{
int a = Integer.parseInt(args[0]);
int b = 42 / a;
System.out.println("a = " + a);

try 
{ 
if (a==1)
{
int c[] = { 1 };
c[20] = 99; // generate an out-of-bounds exception
}
}
catch(ArrayIndexOutOfBoundsException e) 
{
System.out.println("Array index out-of-bounds: " + e);
}



} 
catch(ArithmeticException e) {
System.out.println("Divide by 0: " + e);



}
}



/*


this program nests one try block within another. The program
works as follows. When you execute the program with no command-line arguments, a
divide-by-zero exception is generated by the outer try block. Execution of the program
by one command-line argument generates a divide-by-zero exception from within the
nested try block. Since the inner block does not catch this exception, it is passed on
to the outer try block, where it is handled. If you execute the program with two
command-line arguments, an array boundary exception is generated from within
the inner try block

*/
}